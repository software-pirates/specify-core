import { writeFileSync } from "node:fs";
import path from "node:path";
import { globbySync } from "globby";

import type { InterfaceExportOptions } from "@/scripts/utils";

const __dirname = new URL(".", import.meta.url).pathname;
const SCRIPT_EXT = ".ts";
const output_file = path.join(__dirname, "..", "types", "index.d.ts");

const type_scripts = globbySync(
    [path.join(__dirname, "types", `*${SCRIPT_EXT}`)],
    {
        "absolute": true,
        "onlyFiles": true,
    },
);

const exports = [] as string[];

for (const script_path of type_scripts) {
    const { generateTypeExport } = (await import(script_path)) as {
        generateTypeExport: (opts: InterfaceExportOptions) => string;
    };

    // run the type generation script (no need to await)
    exports.push(generateTypeExport({ output_file }));
}

writeFileSync(
    output_file,
    `// this file is auto-generated by the generate-types script
// do not edit this file directly; to regenerate, run the generate-types script

${exports.join("\n\n")}`,
);
