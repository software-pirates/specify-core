/**
 * Generates type definitions using the type generation scripts in the
 * `runner/scripts/types` directory.
 *
 * The generated type definitions are written to the `@/types/index.d.ts` file.
 */

import { writeFileSync } from "node:fs";
import path from "node:path";
import { globbySync } from "globby";

import type { InterfaceExportOptions } from "@/scripts/utils";

const __dirname = import.meta.dirname;
const output_file = path.join(__dirname, "..", "types", "index.d.ts");

const type_scripts = globbySync([path.join(__dirname, "types", `*.ts`)], {
    "absolute": true,
    "onlyFiles": true,
});

const exports = [] as string[];

for (const script_path of type_scripts) {
    const { generateTypeExport } = (await import(script_path)) as {
        generateTypeExport: (opts: InterfaceExportOptions) => string;
    };

    // run the type generation script (no need to await)
    exports.push(generateTypeExport({ output_file }));
}

const output_header =
    "// this file is auto-generated by the generate-types script\n" +
    "// do not edit this file directly; to regenerate, run the generate-types script\n\n";

writeFileSync(output_file, output_header + exports.join("\n\n") + "\n");
